// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "Noodle.h"
#include "../Constants.h"

Noodle::Noodle() {
	// Use requires() here to declare subsystem dependencies
	// eg. requires(chassis);
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}

// Called just before this Command runs the first time
void Noodle::Initialize() {
	
}

// Called repeatedly when this Command is scheduled to run
void Noodle::Execute() {
	if((Robot::containerElevator->elevatePot->GetValue()-kNOODLEHEIGHT)>20 || (Robot::containerElevator->elevatePot->GetValue()-kNOODLEHEIGHT)<-20)
	{
		Robot::containerElevator->clawElevator->Set(0.0015*(Robot::containerElevator->elevatePot->GetValue()-kNOODLEHEIGHT));
	}
	if((Robot::containerElevator->pivotPot->GetValue()-kNOODLEANGLE)>100 || (Robot::containerElevator->pivotPot->GetValue()-kNOODLEANGLE)<-100)
	{
		Robot::containerElevator->clawPivot->Set(-0.002*(Robot::containerElevator->pivotPot->GetValue()-kNOODLEANGLE));
	}
}

// Make this return true when this Command no longer needs to run execute()
bool Noodle::IsFinished() {
	return false;
}

// Called once after isFinished returns true
void Noodle::End() {
	Robot::containerElevator->clawElevator->Set(0);
	Robot::containerElevator->clawPivot->Set(0);
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void Noodle::Interrupted() {
	Robot::containerElevator->clawElevator->Set(0);
	Robot::containerElevator->clawPivot->Set(0);
}
